server {
    listen 80;
    server_name localhost;

    # Add error logging
    error_log /var/log/nginx/error.log debug;
    access_log /var/log/nginx/access.log;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
        try_files $uri $uri/ /index.html;
    }

    # Debug endpoint to show current configuration
    location /nginx-debug {
        add_header Content-Type application/json;
        return 200 '{"status": "nginx running", "backend_url": "https://demo-dd7m.onrender.com", "request_uri": "$request_uri", "host": "$host"}';
    }

    # Test proxy to external service
    location /test-proxy {
        proxy_pass https://httpbin.org/get;
        proxy_set_header Host httpbin.org;
        proxy_ssl_verify off;
        proxy_ssl_server_name on;
    }

    # Proxy API requests to backend - try different approach
    location /api/ {
        # Use the external backend URL without path rewriting
        proxy_pass https://demo-dd7m.onrender.com; 

        # Keep these standard proxy headers
        proxy_set_header Host demo-dd7m.onrender.com;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # SSL configuration for upstream
        proxy_ssl_verify off;
        proxy_ssl_server_name on;
        proxy_ssl_protocols TLSv1.2 TLSv1.3;
        
        # Add timeout settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Add debugging headers
        add_header X-Debug-Backend-URL https://demo-dd7m.onrender.com always;
        add_header X-Debug-Request-URI $request_uri always;
        add_header X-Debug-Host $host always;
        
        # Add error handling
        proxy_intercept_errors on;
        error_page 502 = @fallback;
    }
    
    # Fallback location for debugging
    location @fallback {
        add_header Content-Type application/json;
        return 502 '{"error": "Backend service unavailable", "backend_url": "https://demo-dd7m.onrender.com", "request_uri": "$request_uri", "host": "$host"}';
    }

    # Health check for nginx
    location /nginx-health {
        add_header Content-Type application/json;
        return 200 '{"status": "nginx running", "backend_url": "https://demo-dd7m.onrender.com"}';
    }

    # Test direct connection to backend
    location /test-backend {
        add_header Content-Type application/json;
        return 200 '{"test": "direct", "backend_url": "https://demo-dd7m.onrender.com", "substituted": "https://demo-dd7m.onrender.com"}';
    }
}